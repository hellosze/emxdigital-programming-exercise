"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// NOTE: We can't `import` the package.json file because it's outside of the "src" directory.
// tslint:disable-next-line: no-var-requires no-require-imports
const manifest = require("../package.json");
// Don't use the npm package name ("version-bump-prompt").
// Use the name of the binary ("bump") instead.
let name = Object.keys(manifest.bin)[0];
const alteredManifest = { ...manifest, name };
exports.manifest = alteredManifest;
// tslint:disable: no-any no-unsafe-any
/**
 * Determines whether the specified value is a package manifest.
 */
function isManifest(obj) {
    return obj &&
        typeof obj === "object" &&
        isOptionalString(obj.name) &&
        isOptionalString(obj.version) &&
        isOptionalString(obj.description);
}
exports.isManifest = isManifest;
/**
 * Determines whether the specified value is a string, null, or undefined.
 */
function isOptionalString(value) {
    let type = typeof value;
    return value === null ||
        type === "undefined" ||
        type === "string";
}
//# sourceMappingURL=manifest.js.map